z lcp-core-bff-org-creation-service
z <
z query -ls
z query -all
z query 
z query *
z query work
cleear
echo $resurrect_dir
echo $( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
jq
brew install jq
kitty @new-window
icat sunset-illustration.jpg
d Mountain\ Retreat\ \[3840x2160\].png sunset-illustration.jpg
d ./src/main/resources/application.yaml ./src/main/resources/application-dev.yaml 
v -d ./src/main/resources/application.yaml ./src/main/resources/application-dev.yaml
d ./src/main/resources/application.yaml ./src/main/resources/application-dev.yaml
kitty +kitten themes
z lcp
echo http://google.com
ls --hyperlink=auto
echo http://google.com | pbcopy
pbcopy
clippaste
kitty +kitten panel sh -c 'printf "\n\n\nHello, world."; sleep 5s'
cd Workspace
echo $resurrect-dir
echo $(resurrect-dir)
echo $($resurrect-dir)
$resurrect-dir
cd .tmux/resurrect
cd save
cd pane_contents
v last
tmux kill
kitty --debug-input
kitty
cd LenovoOTP64
wine64 LenovoOTP64.exe
z knowledge
mkdir lenovo-uds
git config --global user.email "asubramaniya@lenovo.com"
git config --global user.email "azhahes96@gmail.com"
git config --remove-section user
git config --local user.email "asubramaniya@lenovo.com"
git config --local user.name "Azhaheswaran Subramaniyan"
git config --global --remove-section user
alias gst
git init\
git add --all\
git commit -m "Initial Commit"\
git remote add origin https://bitbucket.tc.lenovo.com/scm/\~asubramaniya/lenovo-uds.git\
git push -u origin HEAD:main
rm pre-commit
cd ../../
c ....
v .gitmodules
git pull
git submodule init
git submodule update
cd 004\ Spaces/Work/Projects
git stuat
git stutus
gst
cd ..'\
\
'
alias g*
alias gl
git show 1fcc687
git show 0ec4c12 
cd lenovo-uds
git log --oneline
git show c43361c
git clone https://bitbucket.tc.lenovo.com/scm/lcp/lcp-core-recurring-revenue-proxy.git
docker rm some-postgres
docker rm tender_antonelli
docker rm unruffled_heyrovsky
docker rm vigilant_tesla
echo test
brew install gnu-sed
brew install rg
rm -rf *.mp4
rm -rf *.m4a
rm -rf *.txt
rm -rf *.vtt
rm -rf *.vtt *.txt *.mp4 *.m4a
v hec-kt-slids.md
mv hec-kt-slids.md hec-kt-slides.md
brew install lf
man lf
rclear
locate vpncli
mkdir -p ~/.config/lf\
curl https://raw.githubusercontent.com/gokcehan/lf/master/etc/lfrc.example -o ~/.config/lf/lfrc
mkdir -p ~/.config/lf\
curl https://raw.githubusercontent.com/gokcehan/lf/master/etc/lfcd.sh -o ~/.config/lf/lfcd.sh
echo gopath
echo $GOPATH\\

chmod a-x ~/.config/lf/lfcd.sh
chmod a+r ~/.config/lf/lfcd.sh
chmod a+rw ~/.config/lf/lfcd.sh
ld
alias lf
source ~/.config/lf/lfcd.sh
test ~/.config/lf/lfcd.sh
[ -f ~/.config/lf/lfcd.sh ]
if [ -f ~/.config/lf/lfcd.sh ] then echo test fi\

rm lfcd.sh
curl https://raw.githubusercontent.com/gokcehan/lf/master/etc/lfcd.sh -o ~/.config/lf/lfcd.sh
source ~/.config/lf/lfrc
mkdir -p ~/.config/lf\
curl https://raw.githubusercontent.com/gokcehan/lf/master/etc/colors.example -o ~/.config/lf/colors\
curl https://raw.githubusercontent.com/gokcehan/lf/master/etc/icons.example -o ~/.config/lf/icons
.config/lf/lfcd.sh
chmod +x ./lfcd.sh
lfcd
lfcd.sh
echo $LFCD
echo $HOME
source ./lfcd.sh
nvim -S
echo $vi
vi
echo $EDITOR
echo $fpath
brew install go
echo $gopath
go install github.com/doronbehar/pistol/cmd/pistol@
go install github.com/doronbehar/pistol/cmd/pistol
go install github.com/doronbehar/pistol/cmd/pistol@v0.4.2
brew install pistol
brew install brew install libmagic
brew install libmagic
pistol
go install github.com/doronbehar/pistol/cmd/pistol@latest
pistol 
go pistol
cd doronbehar
cd pistol@v0.4.2
mvn clean compile
tar -xzvf pistol-static-x86_64
tar -xzvf pistol.1.gz
unzip pistol
unzip pistol.1.gz
pistol.1
rm -rf pistol*
v ~/.config/lf/lf_kitty_preview\

chmod +x ~/.config/lf/lf_kitty_{clean,preview}
v ~/.config/lf/lf_kitty_clean
v ~/.config/lf/lf_kitty_preview
tmux attach
v .config/alacritty/alacritty.yml
v ~/.config/kitty/kitty.conf
brew update alacritty
aa
brew upgrade alacritty
alacritty
rm lf_kitty_clean lf_kitty_preview
kls
brew search ueber
brew search ueberzugpp
mkdir -p ~/.config/ueberzugpp
curl https://raw.githubusercontent.com/jstkdng/ueberzugpp/master/homebrew/ueberzugpp.rb -o ~/.config/ueberzugpp/install.rb
brew install --build-from-source ~/.config/ueberzugpp/install.rb
brew install https://raw.githubusercontent.com/jstkdng/ueberzugpp/master/homebrew/ueberzugpp.rb
brew install wget
wget https://raw.githubusercontent.com/jstkdng/ueberzugpp/master/homebrew/ueberzugpp.rb
z ueb
rm install.rb
git clonw https://github.com/jstkdng/ueberzugpp.git
brew install --HEAD -s homebrew/ueberzugpp.rb
cd homebrew
brew install --HEAD -s ueberzugpp.rb
v ueberzugpp.rb
rm -rf ueberzugpp
brew install --HEAD -s https://raw.githubusercontent.com/jstkdng/ueberzugpp/v2.8.7/homebrew/ueberzugpp.rb
wget https://raw.githubusercontent.com/jstkdng/ueberzugpp/v2.8.7/homebrew/ueberzugpp.rb
brew install ueberzugpp.rb
cd .config/ueberzugpp
mkdir -p repo
git clone https://github.com/jstkdng/ueberzugpp.git
cd sc
cd scripts
cp-p
brew install cp-p
git clone https://github.com/Naheel-Azawy/cp-p.git
cd cp-p
sudo make install
mkdir -p /usr/local/bin\
cp -f cp-p /usr/local/bin/\
cp -f mv-p /usr/local/bin/\

z .config
cd repo
cd ueberzugpp
cp-p cleaner preview ~/.config/lf
cp-p cleaner ~/.config/lf/
cp-p cleaner ~/.config/lf/cleaner
cp cleaner ~/.config/lf
cp preview ~/.config/lf
ueberzugpp --version
cd .config/lf
source ./lfub
cd .config/
cd ueberzugpp/repo/ueberzugpp/scripts/lf
mv lfub lfub.sh
bash lfub.sh
ueberzugpp Mountain\ Retreat\ \[3840x2160\].png
ueberzugpp --help
ueberzug Mountain\ Retreat\ \[3840x2160\].png
ueberzug --help
brew install --cask jumpcut
kill -9 4982 
brew install maccy
cd lcp-core-bff-org-creation-service
fd | fzf
colear
mkdir bin
v lfub.sh
lfub.sh
chmod +x lfub.sh
./lfub.sh
cd ./.config/lf/
cd bi
mv lfub.sh lfub
v draw_img.sh
rm cleaner preview
v lfrc
v clear_img.sh
ueberzugpp cmd -s $UB_SOCKET -a add -i PREVIEW  -f Mountain\ Retreat\ \[3840x2160\].png
ueberzugpp cmd -s $UB_SOCKET -i PREVIEW  -f Mountain\ Retreat\ \[3840x2160\].png
ueberzugpp cmd -s $UB_SOCKET -f Mountain\ Retreat\ \[3840x2160\].png
ueberzugpp cmd -s $UB_SOCKET -f "Mountain\ Retreat\ \[3840x2160\].png"
ffmpecthumnailer
ffmpegthumbnailer
brew install ffmpegthumbnailer
ffmpegthumbnailer Mountain\ Retreat\ \[3840x2160\].png
ffmpegthumbnailer -i Mountain\ Retreat\ \[3840x2160\].png
ls -l
chmod +x ~/.config/lf/{clear_img.sh,draw_img.sh,previewer.sh}
chmod +x lfub
cd /temp/
cd /tmp/
echo $SSH_client
v lfub
# image() {\
# 	FILE_PATH="$1"\
# 	X=$4\
# 	Y=$5\
# 	MW=$(($2 - 1))\
# 	MH=$3\
# 	ueberzugpp cmd -s $UB_SOCKET -a add -i PREVIEW -x $X -y $Y --max-width $MW --max-height $MH -f "$FILE_PATH"\
# 	exit 1\
# }\

echo # image() {\
# 	FILE_PATH="$1"\
# 	X=$4\
# 	Y=$5\
# 	MW=$(($2 - 1))\
# 	MH=$3\
# 	ueberzugpp cmd -s $UB_SOCKET -a add -i PREVIEW -x $X -y $Y --max-width $MW --max-height $MH -f "$FILE_PATH"\
# 	exit 1\
# }\

echo $UB_PID_File
echo $UB_pid
echo $UB_PID
echo $UB_SOCKET
ueberzugpp cmd -s $UB_SOCKET -a add -i PREVIEW -x 0 -y 0 --max-width 100 --max-height 100 -f "Mountain Retreat [3840x2160].png"\

ueberzugpp cmd -s $UB_SOCKET -x 10 -y 10 --max-width 100 --max-height 100 -f "Mountain Retreat [3840x2160].png"\

cd  ~/.cache/lf
source previewer.sh
CACHE="$HOME/.cache/lf/thumbnail.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | awk '{print $1}'))"\

brew install sha256sum
brew install sha3sum
CACHE="$HOME/.cache/lf/thumbnail.$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha3sum | awk '{print $1}'))"\

readlink -f bin/lfub
readlink -f Mountain\ Retreat\ \[3840x2160\].png
readlink -f Mountain\ Retreat\ \[3840x2160\].png | sha3sum
readlink -f Mountain\ Retreat\ \[3840x2160\].png | sha3sum | awk '{pring $1}'
stat clear_img.sh
stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' "$(readlink -f "bin/lfub")"
stat -f '%n\0%i\0%F\0%s\0%W\0%Y' "$(readlink -f "bin/lfub")"
stat -f '%n\0%i\0%F\0%s\0%W\0%Y' "$(readlink -f "bin/lfub")" | sha3sum
stat -f '%n\0%i\0%F\0%s\0%W\0%Y' "$(readlink -f "bin/lfub")" | sha3sum | awk '{printf $1}'
lfub
v test.log
ls > test.log
bat test.log
z pictures
ffmpegthumbnailer -i Mountain\ Retreat\ \[3840x2160\].png -o test.png -s 0
open test.png
w3imgdisplay
brew install w3imgdisplay
brew install exiftool
exiftool Mountain\ Retreat\ \[3840x2160\].png
v alacritty-old.yml
tmux 
z lc
exiftool Jenkinsfile
v ~/.config/lf/lfrc
z lf
v previewer.sh
echo $id
lf -remote 'send $id echo hello'
lf -remote 'send $id %echo hello'
lf -remote "send $id set ratios 1:2"
go run
touch go.mod
brew uninstall go
go version
echo $GOPATH\

cd /usr/
rm -rf go
sudo rm -rf go
chmod +x main.go
chmod u+x main.go
go mod init
go build
chmod +x main
go mod download fyne.io/fyne/v2 
go mod download fyne.io/systray
go get fyne.io/fyne/v2
go list -m
go list -m all
ps -ef --forest
ps -ef 
go run main
locate maccy
which maccy
launchctl | man
man launchctl
brew install bytop
brew install bpytop
/Applications/Maccy.app/Contents/MacOS/Maccy
cd
cd -
cd Maccy.app
alias
alias | bat
shortcuts run 'Open maccy'
man ps
if [ -n $(ps | rg maccy) ]; then echo test if\
fi
pgrep -x 'maccy'
pgrep 'maccy'
pgrep
pgrep 'python'
ps | rg maccy
if ps | rg maccy ; then echo test fi
if ps | rg maccy ; then echo test\
else echo som fi\
fi
if ps | rg maccy > dev/null ; then echo test\
else echo som fi\
fi
if ps | rg maccy > /dev/null ; then echo test\
else echo som fi\
fi
if ps | rg 'maccy' >/dev/null; then\
    echo "The app is already running."\
else\
	echo test\
    shortcuts run 'Open maccy'\
fi
ps aww
ps aux | rg 'maccy'
open -a /Applications/Maccy.app/Contents/MacOS/Maccy
brew install yq
yq ~/.config/alacritty/alacritty.yml
yq .a.b ~/.config/alacritty/a
yq .a.b ~/.config/alacritty/alacritty.yml
yq .window.opacity ~/.config/alacritty/alacritty.yml
yq eval .window.opacity=0.9 -i  ~/.config/alacritty/alacritty.yml
rm $ALACRITTY_LOG
v $ALACRITTY_LOG
z alacritty
chmod u+x increase-opacity.sh
yq eval .window.opacity=$(awk '{print $1+$2}' <<<'$(yq .window.opacity ~/.config/alacritty/alacritty.yml) 0.1') -i $ymlfile
yq eval .window.opacity=$(awk '{print $1+$2}' <<<'$(yq .window.opacity ~/.config/alacritty/alacritty.yml) 0.1') -i ~/.config/alacritty/alacritty.yml
awk '{print $1+$2}' <<<'$(yq .window.opacity ~/.config/alacritty/alacritty.yml) 0.1'
awk '{print $1+$2}' <<<"$(yq .window.opacity ~/.config/alacritty/alacritty.yml) 0.1"
awk '{print $1+$2}' <<<"$(yq .window.opacity ~/.config/alacritty/alacritty.yml) 0.2"
yq eval .window.opacity=$(awk '{print $1+$2}' <<<"$(yq .window.opacity ~/.config/alacritty/alacritty.yml) 0.1") -i ~/.config/alacritty/alacritty.yml
./increase-opacity.sh
./change-opacity.sh - 0.4
./change-opacity.sh - 0asdf
./change-opacity.sh - asdf
./change-opacity.sh - 0.5
./change-opacity.sh -
./change-opacity.sh +
./change-opacity.sh + 0.5
v change-opacity.sh
dopacity 0.4
dopacity .2
iopacity 0.2
bat alacritty.yml
curl cht.sh/tmux-delete | bat
curl cht.sh/tmux | bat
curl cht.sh/yq
curl cht.sh/yq | bat
brew install tldrt
brew install tldr
tldr yq
tldr cp-p
cp-p --help
mv ~/Desktop/open\ maccy.app ~/Documents/tools/open\ maccy.app
l ~/Documents/tools
echo $TERm
echo $TERM
ps aux | rg 'cyber'
ps aux | rg 'cy'
z worl
tmux new -s main-session
curl ipaddres.io
curl ipaddress.io
curl parrot.live
curl 'dict://dict.org/d:operating system'
curl emailpipe.sh/listen
curl example.com/api
curl httpbin.org/get
curl -X 'GET' \\
  'https://api.4te.us/Test/get' \\
  -H 'accept: */*'
curl qrenco.de/hello_world
tldr sed
curl cht.sh/sed | bat
curl cht.sh/ed | bat
ps aux 
ps aux | bat
zsh --no-profile
ps a
ps au
ps aux
cd lcp-core-
curl qrenco.de/http://www.linusakesson.net/programming/tty/
cd /opt/cisco/anyconnect/bin/plugins
v amp_uninstall.sh
vpn --help
vpn
l | rg roam
tree .
tree . | rg road
tree . | rg roam
tree . | rg um
./umbrella_uninstall.sh
vpn -connect
./vpn 
ping webvpnauto.lenovo.com\
: 1687838446:0;ping webvpnauto.lenovo.com
cd mgmttun
stty -a | rg raw
v --help
v -n
v -h test
v -h
v --cmd e temp
v --cmd e
v --cmd n
docker run -e KEYCLOAK_USER=admin -e KEYCLOAK_PASSWORD=password -p 8180:8080 --name keycloak-server -d jboss/keycloak:10.0.1
open http://localhost:8180
readlink -f FederationMetadatalatest\ \(1\).xml
mv FederationMetadatalatest\ \(1\).xml saml-file.xml
jq {\
"authProvider":"OKTA",\
"emailPairs":[\
  {\
    "oldEmail":"mt6@lenovo.com",\
    "newEmail":"mt6@lenovo.com"\
  },\
  {\
    "oldEmail":"asubramaniya@lenovo.com",\
    "newEmail":"asubramaniya@lenovo.com"\
  }\
]\
}\

v azhahesorg-saml-configurations.xml
docker compose up
docker exec -it 55228e3423f5 sh
docker exec -it 55228e3423f5
docker exec -it 55228e3423f5 bin/bash
colima stop
docker-compose up
iopacity .2
docker-compose up -d
docker exec -it 55228e3423f5 bash
v -d first next
dopacity .1
iopacity .1
passwd
cleart
brew install neofetch
printf 'asubramaniya\nAzhahes-6\ny' | /opt/cisco/anyconnect/bin/vpn -s connect webvpnva32.lenovo.com
printf 'asubramaniya\nAzhahes-6\n232897\ny' | /opt/cisco/anyconnect/bin/vpn -s connect webvpnva32.lenovo.com
printf 'asubramaniya\nAzhahes-6\n104525\n' | /opt/cisco/anyconnect/bin/vpn -s connect webvpnva32.lenovo.com
cd ../bin
printf 'asubramaniya\nAzhahes-6\n666838\n' | /opt/cisco/anyconnect/bin/vpn -s connect webvpnusrdu01.lenovo.com
1password
brew install --cask 1password/tap/1password-cli
op --version
op --help | bat
op item list --help
op item list --vault work --format=json | op item get
op item list --vault work --format=json
op item list --vault work
op item list --vault work | op item get Lenovo*
op item list --vault work | op item get "Lenovo vpn"
wget ifconfig.io
bat index.html
z /opt/
brew edit wget
v *.patch
sdk --help
sdk
sdk list
mvn clean build
mvn clean
sdk list --help
sdk list --color=always java
rm -rf lcp-core-account-management-service
git clone https://bitbucket.tc.lenovo.com/scm/lcp/lcp-core-account-management-service.git
tmux a
sdk use 11.0.19-amzn
sdk use java 11.0.19
sdk use java 11.0.19-amzn
mvn clean install -
mvn clean install -Dskiptest
mvn test -Dtest=OrganizationResourceV2IT
sdk list java
sdk install java 20.0.1-oracle
sdk install java 17.0.7-oracle
mvn dependency:tree | bat
mvn dependency:tree 
ls -al
cd .m2
cd repository
/Users/azhahes/Downloads/zellij ; exit;
cargo
brew install rust
cargo install --locked zellij\

xit
/Applications/Alacritty.app/Contents/MacOS/alacritty
$ ls
type alacritty
curl -L https://gist.githubusercontent.com/PezCoder/4fd0182de5aacc13a388cdd4c935338c/raw/6d8056282b83a8470adce89e22424a7f55bcde58/install-alacritty.sh
curl -L https://gist.githubusercontent.com/PezCoder/4fd0182de5aacc13a388cdd4c935338c/raw/6d8056282b83a8470adce89e22424a7f55bcde58/install-alacritty.sh | zsh
curl -L https://gist.githubusercontent.com/PezCoder/4fd0182de5aacc13a388cdd4c935338c/raw/6d8056282b83a8470adce89e22424a7f55bcde58/install-alacritty.sh | bash
curl -L https://gist.githubusercontent.com/PezCoder/4fd0182de5aacc13a388cdd4c935338c/raw/6d8056282b83a8470adce89e22424a7f55bcde58/install-alacritty.sh | sed s/cask/--cask/g | bash
curl -L https://gist.githubusercontent.com/PezCoder/4fd0182de5aacc13a388cdd4c935338c/raw/6d8056282b83a8470adce89e22424a7f55bcde58/install-alacritty.sh | sed s/cask install/install --cask/g | bash
curl -L https://gist.githubusercontent.com/PezCoder/4fd0182de5aacc13a388cdd4c935338c/raw/6d8056282b83a8470adce89e22424a7f55bcde58/install-alacritty.sh | sed s/cask\ install/install\ --cask/g | bash
locate alacritty
v ~/.config/alacritty/alacritty.yml.default
mkdir ~/.config/zellij\
zellij setup --dump-config > ~/.config/zellij/config.kdl\

v /Users/azhahes/.config/zellij/config.kdl 
v alacritty.yml
neofetch
zellij ls
man zellij
zellij run ls
zellij run
zellij setup
v tesst.txt
zellij --help
zellij -s main-session
clea
builtin cd -- Documents/
man builtin
op item --help
op item create --help
op item get chatGPT.nvim\
: 1688188673:0;op item get chatGPT.nvim
op item get --help
op item get chatGPT.nvim
op item get chatGPT.nvim --no-newline --fields label=credentialop item get chatGPT.nvim --fields label=credential 
op item get chatGPT.nvim --fields label=credentialop item get chatGPT.nvim --fields label=credential 
op item get chatGPT.nvim --fields label=credential
fd test
fd
iopacity
dopacity
v zsh-interactive-cd.plugin.zsh
mv zsh-interactive-cd.plugin.zsh .zsh-interactive-cd.plugin.zsh
cd go/
cd Desktop/
curl wttr.in
curl wttr.in/kumbakonam
ls -la
ls \
cd documents
fzf | xargs ls
fzf | xargs bat
curl cht.sh/fzf | bat
bat tools/cp-p/README.org 
op connect
op item get "lenovo id"
op item get "Lenovo Id" --fields label=password
cd /opt/cisco/anyconnect/bin
cd profile
v lenovoprofile.xml
cd anyconnect
cd Cisco\ AnyConnect\ Secure\ Mobility\ Client\ Notification.app
cd Contents/
readlink -f Cisco\ AnyConnect\ Secure\ Mobility\ Client\ Notification
readlink -f Cisco\ AnyConnect\ Secure\ Mobility\ Client\ Notification | clipcopy
chmod u+x connect-vpn.sh
man tee
echo " some text success" | grep success
if [ echo " some text success" | grep success ]; then echo if; else echo else; fi;
if [[ echo " some text success" | grep success ]]; then echo if; else echo else; fi;
cd /Applications
cd Cisco
cd Cisco\ AnyConnect\ Secure\ Mobility\ Client.app
cd cn
cd Contents
cd MacOS
readlink -f Cisco\ AnyConnect\ Secure\ Mobility\ Client
readlink -f Cisco\ AnyConnect\ Secure\ Mobility\ Client | clipcopy
ping lenovo.com
ping tc.lenovo.com
ping confluence.tc.lenovo.com
ps aux | rg cy
htop
top
echo "+--+\n|  |\n+--+"
uptime
python3 -m simpleHTTPServer 8000
curl ipecho.net
curl ipecho.net/plain
curl ipecho.net/plain; echo
osascript -e 'display notification "This message should be showing on the notification" with title "Coding Tips" subtitle "blog.petehouston.com" sound name "Pop"'
osascript -e 'display notification "This message should be showing on the notification"'
mdfind tesst
mdfind mountain
mdls mountain
cd 
cd Pictures
mdls sunset-illustration.jpg
man readline
set -o emacs
set -o vi
celar
fd tes
#kill -9 4982 
zellij
echo "http:\\google.com" | open
echo "http:\\google.com" | open -a
echo "http:\\google.com" | xargs open
z vault
op signin
curl ifconfig.co
op --help
op --help | rg status
op item list
ifconfig
launchctl
launchctl list | rg cyber
kill -9 2049
sudo kill -g 2049
sudo kill -9 2049
sudo kill -9 2077
launchctl list | rg cy
launchctl list --help
launchctl 
launchctl plish
launchctl plist
launchctl list
bpytop
launchctl list | rg 3344 | 3550
launchctl list | rg 3344
launchctl list | rg 3550
sudo launchctl list | rg 3550
sudo launchctl list | rg cyber
sudo launchctl list | rg cy
sudo launchctl list | rg len
sudo launchctl list | rg moto
sudo launchctl list
launchctl list com.apple.corebrightnessd
launchctl list com.apple.sysmond
sudo launchctl list com.apple.sysmond
locate activeprobe
/private/var/db/receipts/
v com.cybereason.pkg.activeprobe.plist
cd /
locate cybereason
open CiscoAnyConnect4.10.app
z d
v CybereasonMac.pkg
git clone https://bitbucket.tc.lenovo.com/scm/lcp/lcp-core-mqtt-rate-limiter-proxy.git
cd lcp-core-mqtt-rate-limiter-proxy
cd /opt/cisco/anyconnect/
cd AMPEnabler
cd bib
sudo ./amp_uninstall.sh
sudo ./umbrella_uninstall.sh
./amp_uninstall.sh
python3 mqtt-connection-state-events-check
pip3 requests
pip3 install requesta
pip3 install requests
pip3 install paho
pip3 install paho-client
pip3 install paho-mqtt
python3 mqtt-connection-state-events-check.py
v mqtt-connection-state-events-check.py
npm install -g jwt-cli
jwt --version
d
d left right
l | fzf
cd ~\
touch .hushlogin
mvn clean install -Dskiptests
cd .git
cd hooks
v pre-commit
v .talismanrc
v ~/.vimrc
v .obsidian
v temp
rm temp
fc
ls -a
echo "http:\\google.com"
v tesyt
nvim
clar
grep som
grep val
bat stdout.txt
man sigwinch
v ~/.tmux.conf
stty
stty -a
tmux -a
tmux ls
tmux -a 1
tmux -attach 1
jobs --help
man jobs
fg 1
jobs
man tty
tty -s
pstree
ps
z terminal-emulator
mkcd open-source
git clone git@github.com:liamg/darktile.git
cd darktile
go run cmd/darktile/main.go
rm -rf darktile
git clone git@github.com:fyne-io/terminal.git
go run cmd/fyneterm/main.go
brew install --cask raycast
.l
v .vimrc
cd lcp-core-recurring-revenue-proxy
mvn clean install -DskipTests
docker exec -it af9bdcfde63a mongosh
docker exec -it af9bdcfde63a bash
brew install mongosh
mongosh --help
mongosh mongodh://localhost:32787/recurringrevenueproxy
fg
mongo --version
mongosh --version
mongosh mongodb://localhost:32787/recurringrevenueproxy
cd .
cd ..'\

curl ifconfig.co 
colima start
v ./connect-vpn.sh
cd Downloads
open CybereasonMac.pkg
mongosh mongodb://localhost:32771/recurringrevenueproxy
docker ps
docker ps -a
vimtutor
brew install hammerspoon --cask
cd .obsidian
cd snippets
v extended-colorschemes.css
v style-sheet.css `
v style-sheet.css
rm style-sheet.css
v floating-search-bar.css
v custom-rainbow-colors.css
v floating-status-bar.css
v its-frontmatter.css
rm its-frontmatter.css
bash <(curl -s https://raw.githubusercontent.com/dbalatero/VimMode.spoon/master/bin/installer)
open ~/Downloads/CybereasonMac.pkg
curl ifconfig.co  | clipcopy
git clone https://bitbucket.tc.lenovo.com/scm/lcp/lcp-core-keycloak.git
aws --help
aws configure sso
cd .aws/sso
aws s3 ls --profile azhahes-cli-profie
aws s3 ls --profile azhahes-cli-profile
aws sts get-caller-identity --profile azhahes-cli-profile
aws sts get-caller-identity --profile azhahes-cli-profile | clipcopy
ACCESS_TOKEN=$(jq -r '.accessToken' ~/.aws/sso/cache/<Your SSO ID>.json) 
aws sso login --profile azhahes-cli-profile
ACCESS_TOKEN=$(jq -r '.accessToken' ~/.aws/sso/cache/5d17123b0d39c33a5eecadbc9e4081cf13b91fa8.json)
aws sts get-caller-identity
mkcd camera-photor-reader
go mod init main
go get -u -d gocv.io/x/gocv
brew upgrade opencv\
brew install opencv\

idea --help
idea --version
main
./main
go build main.go
open image.jpg
fswebcam
go get github.com/otiai10/gosseract
brew install fswebcam
open captured.jpg
open bright_captured.jpg
brew install tesseract
go get ./...
open image.png
go run photo-capture.go
open captured_image.jpg
curl cht.sh/golang-pointer | bat
curl cht.sh/go/Pointers | bat
go build --help
go build main.go -o build/capture-otp && ./build/capture-otp
go build -o build/capture-otp
go build -o build/capture-otp && ./build/capture-otp
go build -o build/capture-otp && ./build/capture-otp -asdf
go build -o build/capture-otp && ./build/capture-otp -sw
go build -o build/capture-otp && ./build/capture-otp -ssdf | awk '/OTP:/ {print $2}'
build/capture-otp --help
go build -o build/capture-otp && ./build/capture-otp -sw | awk '/OTP:/ {print $2}'
go build -o build/capture-otp && ./build/capture-otp -sw 
build/capture-otp
build/capture-otp -sw
cd /bin
man [
cd Cellar
echo $path
l | bat
cd local
cd build
rm captured_image.jpg
rm *.png
rm *.jpg
rm main
rm build
rm -rf build
ls ~
cd /usr/tmp
cd /usr/temp
cd /usr/local/
echo $tmpdir
echo $TMPDIR
go run main.go
git config pull.rebase true
go build -o capture-otp
mv capture-otp /usr/local/bin
open ~/Pictures/captured_image.jpg
v connect-vpn.sh
./connect-vpn.sh -x
cd /usr/local/bin
rm capture-otp
go install github.com/azhahes/capture-otp/capture-otp
go install github.com/azhahes/capture-otp/capture-otp@latest
go install github.com/azhahes/capture-otp\

go install github.com/azhahes/capture-otp/capture-otp@latest\

go mod tidy
go install github.com/azhahes/capture-otp@latest\

cd $GOPATH
cd pkg
rm capture-otp@v0.0.0-20230715161105-47a7f1b02e87
rm azhahes
go clean -i
go install github.com/azhahes/capture-otp@a21e4de3e51bfc8220c1819df898c3ff3d3397cc
cd go
cd capture-otp@v0.0.0-20230715163930-a21e4de3e51b
cd .....
cd bin
gol
go env GOBIN
echo $PATH
guru --help
go clean -modcache
go install github.com/azhahes/capture-otp
cd pkg/mod/github.com/azhahes
rm -rf capture-otp@v0.0.0-20230715161105-47a7f1b02e87
sudo rm -rf capture-otp@v0.0.0-20230715161105-47a7f1b02e87
rm -rf azhahes
cd mod
cd download
cd github.com
cd azhahes
cd capture-otp
cd ....
cd ...
cd cache
rm -rf download
go install github.com/azhahes/capture-otp@latest
go install github.com/azhahes/capture-otp@v0.0.1
capture-otp --help
if ! type "$op" > /dev/null; then\
echo "test\
fi\
"
if ! type "$op" > /dev/null; then\
echo "test"\
fi\

if ! type "$opdsfasdf" > /dev/null; then\
echo "test"\
fi\

type op
type capture-otp
type capture-otp > /dev/null
if ! type op > /dev/null; then\
echo "test"\
fi\

if ! type opasdf > /dev/null; then\
echo "test"\
fi\

brew search op
./connect-vpn.sh
z work
git clone https://bitbucket.tc.lenovo.com/scm/lcp/lcp-core-keycloak-data-migration.git
cd lcp-core-keycloak-data-migration
idea .
echo $TMUX
echo ${UID}
v ~/.zshrc
ps aux | rg cisco
ps aux | rg anyconnect
v ~/connect-vpn.sh
ps aux | rg mobility
connect-vpn.sh
xmllint
xmllint --help
capture-otp -sw
chmod u+x test.sh
./test.sh
v test.sh
ls | ./test.sh
tty
cd downloads
ls | rg fed
ls | rg Fed
v FederationMetadatalatest\ \(1\).xml
test /Users/azhahes/Downloads/FederationMetadatalatest (1).xml
test "/Users/azhahes/Downloads/FederationMetadatalatest (1).xml"
cd tools
git clone git@github.com:LazyVim/LazyVim.git
ls	
v LazyVim
v ~/.hammerspoon/init.lua
mkdir -p ~/.hammerspoon/Spoons\
\
git clone https://github.com/jasonrudolph/ControlEscape.spoon.git ~/.hammerspoon/Spoons/ControlEscape.spoon\
\
cd ~/.hammerspoon/Spoons/ControlEscape.spoon\
\
script/setup
brew update && script/setup
v script
echo < README.md
brew info hammerspoon
brew info hammerspoon | grep "hammerspoon:"
z spoon
v README.md
z wo
cd open-source
cd terminal
v term.go
z knowledge-vault
v test
brew install syncthing
cd Library
cd Mobile\ Documents
ls | rg si
cd iCloud\~md\~obsidian
cd Documents
cd knowledge-vault
v .obsidian.vimrc
z --list
z --help
man z
man zoxide
zi knowl
clear
v capture
z capture
zi capture
zi otp
z worksapce
cd sample-apps
cd camera-photo-reader
z _
z-
z -
v main.go
rm dot_zshrc
chezmoi add ~/.zshrc
v dot_zshrc
git status
chezmoi add ~/.config
cd .config
chezmoi add ~/.config/alacritty
chezmoi add ~/.config/lf
cd chezmoi
ps -ef --tree
chezmoi add ~/.hammerspoon
v .gitignore
chezmoi add ~/.tmux.conf
chezmoi add ~/.ideavimrc ~/.vimrc
chezmoi --help
git re-a
git re-add
v .chezmoiignore
z ssh
z .ssh
v config
v .config/chezmoi/chezmoi.toml
v ~/.config/alacritty/alacritty.yml
chezmoi re-add
v $MyVIMRC
cd .config/nvim/lua
cd ..
v init.lua
chezmoi diff
chezmoi add ~/.config/nvim
brew install lsd
lsd
lsd -a
lsd -al
source ~/.zshrc
v .zshenv
z downloads
oh-my-zsh
exir
brew install starship\

z workspace
l
brew install eda
brew install exa
tree
v ~/.config/zsh/.zshrc
z Workspace
cd lcp-core-account-management-service
cd .config/zsh/
z
z camera-photo-reader
la
ll
chezmoi add ~/.config/zsh
bat keybinds.zsh
source ~/.config/zsh/.zshrc
tmux kill-session
tmux
conf zsh
source .zshrc
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
z zsh
v .zshrc
lf
~/connect-vpn.sh
chezmoi cd
ls
v
c
chezmoi apply
lazygit
exit
chezmoi re-add
